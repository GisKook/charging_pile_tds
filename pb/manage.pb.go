// Code generated by protoc-gen-go.
// source: manage.proto
// DO NOT EDIT!

/*
Package Report is a generated protocol buffer package.

It is generated from these files:
	manage.proto
	param.proto

It has these top-level messages:
	Command
	Param
*/
package Report

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command_CommandType int32

const (
	Command_CMT_INVALID Command_CommandType = 0
	// das<->tms
	Command_CMT_REQ_LOGIN Command_CommandType = 1
	Command_CMT_REP_LOGIN Command_CommandType = 32769
	// das<->tms
	Command_CMT_REQ_SETTING Command_CommandType = 16
	Command_CMT_REP_SETTING Command_CommandType = 32784
	// das->tss
	Command_CMT_REQ_HEART Command_CommandType = 6
	// das<->tms
	Command_CMT_REQ_PRICE Command_CommandType = 4
	Command_CMT_REP_PRICE Command_CommandType = 32772
	// das<->tms
	Command_CMT_REQ_MODE Command_CommandType = 3
	Command_CMT_REP_MODE Command_CommandType = 32771
	// das<->tms
	Command_CMT_REQ_MAX_CURRENT      Command_CommandType = 7
	Command_CMT_REP_MAX_CURRENT      Command_CommandType = 32775
	Command_CMT_REQ_CHARGING_PREPARE Command_CommandType = 32777
	Command_CMT_REP_CHARGING_PREPARE Command_CommandType = 9
	Command_CMT_REQ_CHARGING         Command_CommandType = 32778
	Command_CMT_REP_CHARGING         Command_CommandType = 10
	Command_CMT_REQ_STOP_CHARGING    Command_CommandType = 32782
	Command_CMT_REP_STOP_CHARGING    Command_CommandType = 14
	// web<->das
	Command_CMT_REQ_NOTIFY_SET_PRICE Command_CommandType = 32783
	Command_CMT_REP_NOTIFY_SET_PRICE Command_CommandType = 15
)

var Command_CommandType_name = map[int32]string{
	0:     "CMT_INVALID",
	1:     "CMT_REQ_LOGIN",
	32769: "CMT_REP_LOGIN",
	16:    "CMT_REQ_SETTING",
	32784: "CMT_REP_SETTING",
	6:     "CMT_REQ_HEART",
	4:     "CMT_REQ_PRICE",
	32772: "CMT_REP_PRICE",
	3:     "CMT_REQ_MODE",
	32771: "CMT_REP_MODE",
	7:     "CMT_REQ_MAX_CURRENT",
	32775: "CMT_REP_MAX_CURRENT",
	32777: "CMT_REQ_CHARGING_PREPARE",
	9:     "CMT_REP_CHARGING_PREPARE",
	32778: "CMT_REQ_CHARGING",
	10:    "CMT_REP_CHARGING",
	32782: "CMT_REQ_STOP_CHARGING",
	14:    "CMT_REP_STOP_CHARGING",
	32783: "CMT_REQ_NOTIFY_SET_PRICE",
	15:    "CMT_REP_NOTIFY_SET_PRICE",
}
var Command_CommandType_value = map[string]int32{
	"CMT_INVALID":              0,
	"CMT_REQ_LOGIN":            1,
	"CMT_REP_LOGIN":            32769,
	"CMT_REQ_SETTING":          16,
	"CMT_REP_SETTING":          32784,
	"CMT_REQ_HEART":            6,
	"CMT_REQ_PRICE":            4,
	"CMT_REP_PRICE":            32772,
	"CMT_REQ_MODE":             3,
	"CMT_REP_MODE":             32771,
	"CMT_REQ_MAX_CURRENT":      7,
	"CMT_REP_MAX_CURRENT":      32775,
	"CMT_REQ_CHARGING_PREPARE": 32777,
	"CMT_REP_CHARGING_PREPARE": 9,
	"CMT_REQ_CHARGING":         32778,
	"CMT_REP_CHARGING":         10,
	"CMT_REQ_STOP_CHARGING":    32782,
	"CMT_REP_STOP_CHARGING":    14,
	"CMT_REQ_NOTIFY_SET_PRICE": 32783,
	"CMT_REP_NOTIFY_SET_PRICE": 15,
}

func (x Command_CommandType) String() string {
	return proto.EnumName(Command_CommandType_name, int32(x))
}
func (Command_CommandType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Command struct {
	Type         Command_CommandType `protobuf:"varint,1,opt,name=type,enum=Report.Command_CommandType" json:"type,omitempty"`
	Uuid         string              `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	Tid          uint64              `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
	SerialNumber uint32              `protobuf:"varint,4,opt,name=serial_number" json:"serial_number,omitempty"`
	Paras        []*Param            `protobuf:"bytes,5,rep,name=paras" json:"paras,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Command) GetType() Command_CommandType {
	if m != nil {
		return m.Type
	}
	return Command_CMT_INVALID
}

func (m *Command) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Command) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *Command) GetSerialNumber() uint32 {
	if m != nil {
		return m.SerialNumber
	}
	return 0
}

func (m *Command) GetParas() []*Param {
	if m != nil {
		return m.Paras
	}
	return nil
}

func init() {
	proto.RegisterType((*Command)(nil), "Report.Command")
	proto.RegisterEnum("Report.Command_CommandType", Command_CommandType_name, Command_CommandType_value)
}

func init() { proto.RegisterFile("manage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x92, 0x4f, 0x6f, 0x94, 0x40,
	0x18, 0x87, 0x65, 0xa0, 0xdb, 0xf4, 0x65, 0xe9, 0x8e, 0xef, 0xba, 0x4a, 0x6d, 0x63, 0x48, 0x4f,
	0x78, 0xd9, 0x43, 0xfd, 0x04, 0x84, 0x8e, 0x94, 0xa4, 0x85, 0x71, 0x1c, 0x8d, 0x9e, 0x08, 0xcd,
	0x12, 0xb3, 0x89, 0x2c, 0x84, 0xb2, 0x87, 0xde, 0xc6, 0x68, 0x62, 0xf4, 0xa0, 0x7e, 0x4d, 0x6f,
	0x7e, 0x04, 0x83, 0xec, 0xac, 0xb4, 0x7b, 0x9a, 0xe4, 0x79, 0x7e, 0xef, 0x9f, 0xbc, 0x19, 0x18,
	0x97, 0xf9, 0x2a, 0xff, 0x50, 0xcc, 0xeb, 0xa6, 0x6a, 0x2b, 0x1c, 0x89, 0xa2, 0xae, 0x9a, 0xf6,
	0xa9, 0x5d, 0xe7, 0x4d, 0x5e, 0xf6, 0xf0, 0xf4, 0x8f, 0x05, 0xfb, 0x61, 0x55, 0x96, 0xf9, 0x6a,
	0x81, 0xcf, 0xc1, 0x6a, 0x6f, 0xeb, 0xc2, 0x35, 0x3c, 0xc3, 0x3f, 0x3c, 0x3b, 0x9e, 0xf7, 0xf9,
	0xf9, 0x46, 0xeb, 0x57, 0xde, 0xd6, 0x05, 0x8e, 0xc1, 0x5a, 0xaf, 0x97, 0x0b, 0x97, 0x78, 0x86,
	0x7f, 0x80, 0x36, 0x98, 0xed, 0x72, 0xe1, 0x9a, 0x9e, 0xe1, 0x5b, 0x38, 0x03, 0xe7, 0xa6, 0x68,
	0x96, 0xf9, 0xc7, 0x6c, 0xb5, 0x2e, 0xaf, 0x8b, 0xc6, 0xb5, 0x3c, 0xc3, 0x77, 0xf0, 0x04, 0xf6,
	0xba, 0xb9, 0x37, 0xee, 0x9e, 0x67, 0xfa, 0xf6, 0x99, 0xa3, 0xbb, 0xf3, 0x6e, 0x99, 0xd3, 0xdf,
	0x26, 0xd8, 0xc3, 0xfe, 0x13, 0xb0, 0xc3, 0x2b, 0x99, 0xc5, 0xc9, 0xdb, 0xe0, 0x32, 0x3e, 0xa7,
	0x0f, 0xf0, 0x21, 0x38, 0x1d, 0x10, 0xec, 0x55, 0x76, 0x99, 0x46, 0x71, 0x42, 0x0d, 0x9c, 0x6a,
	0xc4, 0x37, 0xe8, 0x93, 0x22, 0x38, 0x85, 0x89, 0xce, 0xbd, 0x66, 0x52, 0xc6, 0x49, 0x44, 0x29,
	0xce, 0x34, 0xe4, 0x5b, 0xf8, 0x4b, 0x91, 0x61, 0xcf, 0x0b, 0x16, 0x08, 0x49, 0x47, 0x43, 0xc4,
	0x45, 0x1c, 0x32, 0x6a, 0x0d, 0xc7, 0xf4, 0xe8, 0x8b, 0x22, 0x48, 0x61, 0xac, 0x73, 0x57, 0xe9,
	0x39, 0xa3, 0x26, 0xa2, 0x26, 0xbc, 0x27, 0x9f, 0x15, 0xc1, 0x27, 0x30, 0xdd, 0xa6, 0x82, 0x77,
	0x59, 0xf8, 0x46, 0x08, 0x96, 0x48, 0xba, 0x8f, 0x47, 0x5a, 0xf0, 0x3b, 0xe2, 0xab, 0x22, 0xf8,
	0x0c, 0x5c, 0x5d, 0x13, 0x5e, 0x04, 0x22, 0x8a, 0x93, 0x28, 0xe3, 0x82, 0xf1, 0x40, 0x30, 0xfa,
	0x4d, 0x11, 0x3c, 0xd1, 0x9e, 0xef, 0xfa, 0x03, 0x7c, 0x0c, 0xf4, 0x7e, 0x35, 0xfd, 0xae, 0x08,
	0x3e, 0xd2, 0xfc, 0x7f, 0x15, 0x05, 0x3c, 0x86, 0xd9, 0xf6, 0x58, 0x32, 0x1d, 0xa8, 0x1f, 0x8a,
	0xe0, 0x91, 0x96, 0xfc, 0x9e, 0x3c, 0x1c, 0xee, 0x98, 0xa4, 0x32, 0x7e, 0xf9, 0xbe, 0x3b, 0xeb,
	0xe6, 0x3a, 0x3f, 0xef, 0xee, 0xb8, 0xe3, 0x27, 0xd7, 0xa3, 0x7f, 0x3f, 0xef, 0xc5, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x06, 0x14, 0x1f, 0x56, 0x9e, 0x02, 0x00, 0x00,
}
